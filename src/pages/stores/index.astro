---
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Pagination from "@components/Pagination.astro";
import Card from "@components/Card";
import { SITE } from "@config";
import HeroImage from "@components/HeroImage.astro";
import Hr from "@components/Hr.astro";
import {
  BlocksRenderer,
  type BlocksContent,
} from "@strapi/blocks-react-renderer";

export interface Props {
  currentPage: number;
  totalPages: number;
  stores: CollectionEntry<"stores">[];
}

import { getCollection } from "astro:content";
import type Store from "@interfaces/Store";
import type Page from "@interfaces/Page";
import { slugifyStr } from "@utils/slugify";
import { markketplace } from "@config";

const stores = await getCollection("stores");
const store = stores.find(
  (store: Store) => store.data.slug === markketplace.STORE_SLUG
);

const { currentPage, totalPages } = Astro.props;

const pages = await getCollection("pages");
const StorePage: { data: Page } | undefined = pages.find(
  (page: { data: Page }) => page.data.slug === "stores"
);
console.log({ StorePage });
---

<Layout
  title={`Posts | ${SITE.title}`}
  meta={{
    title: StorePage?.data?.SEO?.metaTitle || "Stores",
    description:
      StorePage?.data?.SEO?.metaDescription ||
      "Check out the stores in this markkët instance.",
  }}
>
  <Header activeNav="pages" store={store} />
  <main id="main-content">
    <section id="about" class="mb-10 mt-4 max-w-3xl prose-img:border-0">
      {
        store?.data?.SEO?.socialImage && (
          <HeroImage
            image={
              StorePage?.data?.SEO?.socialImage || store?.data?.SEO?.socialImage
            }
            title={StorePage?.data?.Title || store?.data?.title}
          />
        )
      }
      <h1 class="text-2xl tracking-wider sm:text-3xl">
        {StorePage?.data?.Title || store?.data?.title}
      </h1>
      <div class="mb-5 mt-5">
        {
          StorePage?.data?.Content ? (
            <BlocksRenderer
              content={StorePage?.data?.Content || ([] as BlocksContent[])}
            />
          ) : (
            "Articles by our contributors"
          )
        }
      </div>
    </section>
    <Hr />
  </main>
  <Main pageTitle="Stores" pageDesc="Friendly stores in this markkët instance">
    <ul class="-mx-4 flex flex-wrap">
      {
        stores.map(({ data }) => (
          <Card
            href={`/stores/${data.slug || slugifyStr(data.title)}`}
            tags={[]}
            image={data.Logo || data.SEO?.socialImage}
            frontmatter={{
              author: "x",
              title: data.title || "---",
              pubDatetime: new Date(data.createdAt),
              modDatetime: new Date(data.updatedAt),
              description: data.SEO?.metaDescription || data.Description || "",
              SEO: {
                ...data.SEO,
                metaTitle: data.SEO?.metaTitle || data.title || "Store",
                socialImage: {
                  url: data.SEO?.socialImage?.url || data.Logo?.url,
                },
              },
            }}
          />
        ))
      }
    </ul>
  </Main>

  <Pagination
    {currentPage}
    {totalPages}
    prevUrl={`/blog${currentPage - 1 !== 1 ? "/" + (currentPage - 1) : ""}/`}
    nextUrl={`/blog/${currentPage + 1}/`}
  />

  <Footer noMarginTop={totalPages > 1} activeNav="stores" />
</Layout>
