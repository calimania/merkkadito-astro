---
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Footer from "@components/Footer.astro";
// import Pagination from "@components/Pagination.astro";
import ProductsPage from "@components/pages.products.astro";
import {
  BlocksRenderer,
  type BlocksContent,
} from "@strapi/blocks-react-renderer";

export interface Props {
  currentPage: number;
  totalPages: number;
  stores: CollectionEntry<"stores">[];
}

import { getCollection } from "astro:content";

const store = (await getCollection("store"))?.[0]?.data;

const page = (await getCollection("pages"))?.find(
  (p: any) => p.data.slug == "products"
)?.data;

const products = await getCollection("products");

//  @TODO, restore see more pages, $currentPage
const { totalPages } = Astro.props;
const meta = {
  title: page?.SEO?.metaTitle || `${store?.title} Catalogue`,
  image: page?.SEO?.socialImage?.url,
  description: page?.SEO?.metaDescription,
  url: page?.SEO?.metaUrl || "/products",
  pubDatetime: page?.updatedAt,
  modDatetime: page?.createdAt,
};
---

<Layout meta={meta}>
  <ProductsPage products={products} page={page} />
  <section class="container mx-auto max-w-4xl px-4 py-12 sm:px-6">
    <div class="prose prose-lg dark:prose-invert max-w-none text-gray-700">
      <BlocksRenderer content={page?.Content || ([] as BlocksContent[])} />
    </div>
  </section>
  <Footer noMarginTop={totalPages > 1} activeNav="products" />
</Layout>
