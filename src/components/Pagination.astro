---
import LinkButton from "./LinkButton.astro";
import { IconArrowElbowLeft, IconArrowBounce } from "@tabler/icons-react";

export interface Props {
  currentPage: number;
  totalPages: number;
  prevUrl: string;
  nextUrl: string;
}

const { currentPage, totalPages, prevUrl, nextUrl } = Astro.props;

const prev = currentPage > 1 ? "" : "disabled";
const next = currentPage < totalPages ? "" : "disabled";
const isPrevDisabled = prev === "disabled";
const isNextDisabled = next === "disabled";
---

{
  totalPages > 1 && (
    <nav class="pagination-wrapper text-center" aria-label="Pagination">
      <LinkButton
        disabled={isPrevDisabled}
        href={prevUrl}
        className={`group mr-4 transform bg-gray-900 px-12 py-4 text-xs font-light tracking-widest text-white uppercase transition-all duration-300 select-none ${prev} ${!isPrevDisabled && "hover:-translate-y-1 hover:bg-gray-800"}`}
        ariaLabel="Previous"
      >
        <IconArrowElbowLeft size={18} className="display-inline " />
      </LinkButton>
      <span class="mx-8">
        [ {currentPage} / {totalPages} ]
      </span>
      <LinkButton
        disabled={isNextDisabled}
        href={nextUrl}
        className={`group mr-4 transform bg-gray-900 px-12 py-4 text-xs font-light tracking-widest text-white uppercase transition-all duration-300 select-none ${next} ${!isNextDisabled && "hover:-translate-y-1 hover:bg-gray-800"}`}
        ariaLabel="Next"
      >
        <IconArrowBounce size={18} className="display-inline " />
      </LinkButton>
    </nav>
  )
}

<!-- <style>
  .pagination-wrapper {
    @apply mb-8 mt-auto flex justify-center;
  }
  .disabled {
    @apply pointer-events-none select-none opacity-50 hover:text-skin-base group-hover:fill-skin-base;
  }
  .disabled-svg {
    @apply group-hover:!fill-skin-base;
  }
</style> -->
